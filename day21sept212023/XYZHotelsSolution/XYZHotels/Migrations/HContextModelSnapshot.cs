// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XYZHotels.Context;

#nullable disable

namespace XYZHotels.Migrations
{
    [DbContext(typeof(HContext))]
    partial class HContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XYZHotels.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<int>("RoomNo")
                        .HasColumnType("integer");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomNo");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("XYZHotels.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pic")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("hotel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Mumbai",
                            Name = "TAJ",
                            Phone = "9955668855"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Mumbai",
                            Name = "IBIS",
                            Phone = "256854658"
                        });
                });

            modelBuilder.Entity("XYZHotels.Models.Room", b =>
                {
                    b.Property<int>("RoomNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomNo"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Pic")
                        .HasColumnType("text");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.HasKey("RoomNo");

                    b.HasIndex("Id");

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            RoomNo = 101,
                            Details = "AC Room",
                            Id = 1,
                            price = 2000.0
                        },
                        new
                        {
                            RoomNo = 102,
                            Details = "Non AC Room",
                            Id = 2,
                            price = 1500.0
                        });
                });

            modelBuilder.Entity("XYZHotels.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<byte[]>("Key")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("users");
                });

            modelBuilder.Entity("XYZHotels.Models.Booking", b =>
                {
                    b.HasOne("XYZHotels.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("XYZHotels.Models.Room", b =>
                {
                    b.HasOne("XYZHotels.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("XYZHotels.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
